{ parameter
    (or (or (or (or (or %call_fa2
                       (pair %balance_of
                          (list %requests (pair (address %owner) (nat %token_id)))
                          (contract %callback
                             (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                       (or (list %transfer
                              (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
                           (list %update_operators
                              (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                  (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))))
                    (pair %forwardFee (nat %epoch) (address %feeDistributor)))
                (or (nat %increase_observation_count) (unit %retrieve_dev_share)))
            (or (or (pair %set_position
                       (pair (pair (timestamp %deadline) (nat %liquidity))
                             (int %lower_tick_index)
                             (int %lower_tick_witness))
                       (pair (pair %maximum_tokens_contributed (nat %x) (nat %y)) (int %upper_tick_index))
                       (int %upper_tick_witness))
                    (unit %toggle_ve))
                (or (pair %update_position
                       (pair (pair (timestamp %deadline) (int %liquidity_delta))
                             (pair %maximum_tokens_contributed (nat %x) (nat %y))
                             (nat %position_id))
                       (address %to_x)
                       (address %to_y))
                    (pair %x_to_y (pair (timestamp %deadline) (nat %dx)) (nat %min_dy) (address %to_dy)))))
        (pair %y_to_x (pair (timestamp %deadline) (nat %dy)) (nat %min_dx) (address %to_dx))) ;
  storage
    (pair (pair (pair (pair (pair %constants
                               (address %factory)
                               (nat %fee_bps)
                               (or %token_x (or (address %fa12) (pair %fa2 address nat)) (unit %tez))
                               (or %token_y (or (address %fa12) (pair %fa2 address nat)) (unit %tez))
                               (nat %tick_spacing))
                            (pair %cumulatives_buffer
                               (pair (nat %first) (nat %last))
                               (big_map %map
                                  nat
                                  (pair (pair (pair %spl (nat %block_start_liquidity_value) (nat %sum))
                                              (pair %tick (int %block_start_value) (int %sum)))
                                        (timestamp %time)))
                               (nat %reserved_length)))
                      (int %cur_tick_index)
                      (int %cur_tick_witness))
                (pair (pair %dev_share (nat %x) (nat %y)) (pair %fee_growth (nat %x) (nat %y)))
                (bool %is_ve)
                (big_map %ladder (pair (nat %exp) (bool %positive)) (pair (int %offset) (nat %v))))
          (pair (pair (nat %liquidity) (big_map %metadata string bytes))
                (nat %new_position_id)
                (big_map %operators (pair (address %owner) (address %operator) (nat %token_id)) unit))
          (pair (big_map %positions
                   nat
                   (pair (pair (pair (pair %fee_growth_inside_last (int %x) (int %y)) (nat %liquidity))
                               (int %lower_tick_index)
                               (address %owner))
                         (int %upper_tick_index)))
                (pair %protocol_share (nat %x) (nat %y)))
          (nat %sqrt_price)
          (big_map %ticks
             int
             (pair (pair (pair (pair (pair %fee_growth_outside (nat %x) (nat %y)) (int %liquidity_net))
                               (nat %n_positions)
                               (int %next))
                         (pair (int %prev) (nat %seconds_outside))
                         (nat %seconds_per_liquidity_outside)
                         (nat %sqrt_price))
                   (int %tick_cumulative_outside)))) ;
  code { UNIT ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             SWAP ;
             INT ;
             SWAP ;
             NEG ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             ABS } ;
         LAMBDA
           (pair int int)
           int
           { UNPAIR ;
             NEG ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             NEG } ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         LAMBDA
           (pair int nat)
           nat
           { UNPAIR ; ISNAT ; IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         LAMBDA
           (pair int (big_map (pair nat bool) (pair int nat)))
           nat
           { UNPAIR ;
             SWAP ;
             PUSH int 0 ;
             DUP 3 ;
             COMPARE ;
             GT ;
             PUSH nat 0 ;
             PAIR ;
             PAIR ;
             PUSH nat 1 ;
             PUSH int 0 ;
             PAIR ;
             DIG 2 ;
             ABS ;
             PAIR ;
             PAIR ;
             LEFT (pair int nat) ;
             LOOP_LEFT
               { UNPAIR ;
                 UNPAIR ;
                 DIG 2 ;
                 UNPAIR ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP 3 ;
                      RIGHT (pair (pair nat int nat) (pair nat bool) (big_map (pair nat bool) (pair int nat))) }
                    { PUSH nat 2 ;
                      DIG 3 ;
                      EDIV ;
                      IF_NONE { PUSH nat 300 ; FAILWITH } {} ;
                      UNPAIR ;
                      DUP 4 ;
                      DUP 4 ;
                      GET ;
                      IF_NONE { PUSH nat 102 ; FAILWITH } {} ;
                      PUSH nat 0 ;
                      DIG 3 ;
                      COMPARE ;
                      EQ ;
                      IF { DROP ; DIG 3 }
                         { DUP 5 ; CDR ; DUP 2 ; CDR ; MUL ; DIG 5 ; CAR ; DIG 2 ; CAR ; ADD ; PAIR } ;
                      DUP 3 ;
                      PUSH nat 1 ;
                      DIG 4 ;
                      CAR ;
                      ADD ;
                      UPDATE 1 ;
                      DIG 3 ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      DIG 2 ;
                      PAIR ;
                      PAIR ;
                      LEFT (pair int nat) } } ;
             DUP ;
             CAR ;
             PUSH int -80 ;
             SUB ;
             PUSH int 0 ;
             DUP 2 ;
             COMPARE ;
             GT ;
             IF { ABS ;
                  SWAP ;
                  CDR ;
                  PAIR ;
                  LEFT nat ;
                  LOOP_LEFT
                    { UNPAIR ;
                      PUSH nat 256 ;
                      DUP ;
                      DUP 4 ;
                      COMPARE ;
                      LE ;
                      IF { DROP ; LSR ; RIGHT (pair nat nat) }
                         { DUP ; DIG 2 ; LSR ; SWAP ; DIG 2 ; SUB ; ABS ; SWAP ; PAIR ; LEFT nat } } }
                { ABS ;
                  SWAP ;
                  CDR ;
                  PAIR ;
                  LEFT nat ;
                  LOOP_LEFT
                    { UNPAIR ;
                      PUSH nat 256 ;
                      DUP ;
                      DUP 4 ;
                      COMPARE ;
                      LE ;
                      IF { DROP ; LSL ; RIGHT (pair nat nat) }
                         { DUP ; DIG 2 ; LSL ; SWAP ; DIG 2 ; SUB ; ABS ; SWAP ; PAIR ; LEFT nat } } } } ;
         LAMBDA
           (pair address address nat (or (or address (pair address nat)) unit))
           operation
           { UNPAIR 4 ;
             DIG 3 ;
             IF_LEFT
               { IF_LEFT
                   { CONTRACT %transfer (pair address address nat) ;
                     IF_NONE { PUSH nat 200 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     DIG 4 ;
                     PAIR ;
                     DIG 3 ;
                     PAIR ;
                     TRANSFER_TOKENS }
                   { UNPAIR ;
                     CONTRACT %transfer (list (pair address (list (pair address nat nat)))) ;
                     IF_NONE { PUSH nat 200 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     NIL (pair address (list (pair address nat nat))) ;
                     NIL (pair address nat nat) ;
                     DIG 7 ;
                     DIG 5 ;
                     PAIR ;
                     DIG 6 ;
                     PAIR ;
                     CONS ;
                     DIG 4 ;
                     PAIR ;
                     CONS ;
                     TRANSFER_TOKENS } }
               { DROP 4 ; PUSH nat 300 ; FAILWITH } } ;
         LAMBDA
           (pair (lambda (pair int (big_map (pair nat bool) (pair int nat))) nat)
                 (pair int nat nat (big_map (pair nat bool) (pair int nat))))
           int
           { UNPAIR ;
             SWAP ;
             UNPAIR 4 ;
             DUP 3 ;
             PUSH nat 10 ;
             MUL ;
             DUP 3 ;
             PUSH nat 15 ;
             MUL ;
             DUP 2 ;
             COMPARE ;
             GT ;
             DUP 4 ;
             PUSH nat 7 ;
             MUL ;
             DIG 2 ;
             COMPARE ;
             LT ;
             OR ;
             IF { PUSH nat 101 ; FAILWITH } {} ;
             DUP 2 ;
             DUP 4 ;
             ADD ;
             DUP ;
             DUP 4 ;
             DUP 6 ;
             SUB ;
             PUSH int 60003 ;
             MUL ;
             MUL ;
             DIG 3 ;
             DUP 5 ;
             PUSH nat 2 ;
             MUL ;
             MUL ;
             DUP 3 ;
             DIG 3 ;
             MUL ;
             ADD ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             ADD ;
             DUP 3 ;
             DUP 2 ;
             PAIR ;
             DUP 5 ;
             SWAP ;
             EXEC ;
             SWAP ;
             PAIR ;
             LEFT int ;
             LOOP_LEFT
               { UNPAIR ;
                 SWAP ;
                 DUP 3 ;
                 COMPARE ;
                 LT ;
                 IF { PUSH int 1 ;
                      SWAP ;
                      SUB ;
                      DUP 3 ;
                      DUP 2 ;
                      PAIR ;
                      DUP 5 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      PAIR ;
                      LEFT int }
                    { PUSH int 1 ;
                      DUP 2 ;
                      ADD ;
                      DUP 4 ;
                      DUP 2 ;
                      PAIR ;
                      DUP 6 ;
                      SWAP ;
                      EXEC ;
                      DUP 4 ;
                      DUP 2 ;
                      COMPARE ;
                      LE ;
                      IF { DIG 2 ; DROP ; SWAP ; PAIR ; LEFT int }
                         { DROP 2 ; RIGHT (pair int nat) } } } ;
             SWAP ;
             DIG 2 ;
             DIG 3 ;
             DROP 3 } ;
         DUP 3 ;
         APPLY ;
         LAMBDA
           (pair unit (pair address bool))
           (pair nat nat)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             DIG 2 ;
             VIEW "get_fee_shares" (pair nat nat) ;
             IF_NONE
               { DROP ; PUSH nat 403 ; FAILWITH }
               { UNPAIR ;
                 DIG 2 ;
                 IF { SWAP } { SWAP ; DROP ; PUSH nat 0 } ;
                 SWAP ;
                 PAIR } } ;
         DUP 9 ;
         APPLY ;
         LAMBDA
           (pair (lambda (pair int (big_map (pair nat bool) (pair int nat))) nat)
                 (pair (pair (pair (big_map
                                      int
                                      (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int))
                                   int)
                             int
                             int)
                       (pair (pair nat nat) nat)
                       nat
                       (big_map (pair nat bool) (pair int nat))))
           (big_map
              int
              (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int))
           { UNPAIR ;
             SWAP ;
             LEFT (big_map
                     int
                     (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)) ;
             LOOP_LEFT
               { UNPAIR ;
                 UNPAIR ;
                 UNPAIR ;
                 DIG 2 ;
                 UNPAIR ;
                 DIG 4 ;
                 UNPAIR ;
                 UNPAIR ;
                 DIG 2 ;
                 UNPAIR ;
                 DUP 7 ;
                 DUP 9 ;
                 MEM ;
                 IF { SWAP ;
                      DIG 2 ;
                      DIG 3 ;
                      DIG 4 ;
                      DIG 5 ;
                      DIG 7 ;
                      DROP 7 ;
                      RIGHT
                        (pair (pair (pair (big_map
                                             int
                                             (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int))
                                          int)
                                    int
                                    int)
                              (pair (pair nat nat) nat)
                              nat
                              (big_map (pair nat bool) (pair int nat))) }
                    { DUP 8 ;
                      DUP 6 ;
                      COMPARE ;
                      GT ;
                      IF { DROP 8 ; PUSH nat 100 ; FAILWITH }
                         { DUP 7 ;
                           DUP 6 ;
                           GET ;
                           IF_NONE { PUSH nat 105 ; FAILWITH } {} ;
                           DUP ;
                           CAR ;
                           CAR ;
                           CDR ;
                           CDR ;
                           DUP 10 ;
                           DUP 2 ;
                           COMPARE ;
                           GT ;
                           IF { DUP 9 ;
                                DUP 2 ;
                                GET ;
                                IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
                                DIG 9 ;
                                DUP 4 ;
                                DIG 4 ;
                                CAR ;
                                DUP ;
                                CAR ;
                                DUP ;
                                CDR ;
                                DUP 14 ;
                                UPDATE 2 ;
                                UPDATE 2 ;
                                UPDATE 1 ;
                                UPDATE 1 ;
                                DUP 9 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                DUP 2 ;
                                DIG 2 ;
                                CAR ;
                                DUP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                DUP 13 ;
                                UPDATE 1 ;
                                UPDATE 1 ;
                                UPDATE 2 ;
                                UPDATE 1 ;
                                DUP 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                DIG 7 ;
                                DIG 4 ;
                                DUP 9 ;
                                PAIR ;
                                DUP 10 ;
                                SWAP ;
                                EXEC ;
                                DIG 4 ;
                                PAIR ;
                                DIG 5 ;
                                DIG 6 ;
                                PAIR ;
                                PAIR ;
                                DIG 3 ;
                                PUSH nat 0 ;
                                PAIR ;
                                PUSH int 0 ;
                                DIG 5 ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                DIG 2 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                RIGHT
                                  (pair (pair (pair (big_map
                                                       int
                                                       (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int))
                                                    int)
                                              int
                                              int)
                                        (pair (pair nat nat) nat)
                                        nat
                                        (big_map (pair nat bool) (pair int nat))) }
                              { SWAP ;
                                DIG 6 ;
                                DROP 2 ;
                                DUG 2 ;
                                PAIR ;
                                DIG 3 ;
                                DIG 3 ;
                                PAIR ;
                                PAIR ;
                                DUG 2 ;
                                PAIR ;
                                DIG 3 ;
                                DIG 3 ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                LEFT (big_map
                                        int
                                        (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)) } } } } ;
             SWAP ;
             DROP } ;
         DUP 5 ;
         APPLY ;
         DIG 4 ;
         DROP ;
         LAMBDA
           (pair (lambda (pair int nat) nat)
                 (pair (big_map
                          int
                          (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int))
                       int
                       int
                       int))
           (big_map
              int
              (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int))
           { UNPAIR ;
             SWAP ;
             UNPAIR 4 ;
             DUP ;
             DUP 3 ;
             GET ;
             IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
             PUSH nat 313 ;
             DIG 4 ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             ADD ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DIG 4 ;
             DUP 3 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             ADD ;
             DUP 3 ;
             DIG 3 ;
             CAR ;
             DUP ;
             CAR ;
             DUP ;
             CDR ;
             DIG 5 ;
             UPDATE 1 ;
             UPDATE 2 ;
             UPDATE 1 ;
             UPDATE 1 ;
             DIG 2 ;
             DUP 2 ;
             DIG 2 ;
             CAR ;
             DUP ;
             CAR ;
             DUP ;
             CAR ;
             DIG 5 ;
             UPDATE 2 ;
             UPDATE 1 ;
             UPDATE 1 ;
             UPDATE 1 ;
             DIG 2 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE } ;
         DUP 6 ;
         APPLY ;
         LAMBDA
           (pair (pair (pair (pair (pair (pair address
                                               nat
                                               (or (or address (pair address nat)) unit)
                                               (or (or address (pair address nat)) unit)
                                               nat)
                                         (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                   int
                                   int)
                             (pair (pair nat nat) (pair nat nat))
                             bool
                             (big_map (pair nat bool) (pair int nat)))
                       (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                       (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                       nat
                       (big_map
                          int
                          (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))
                 int)
           (pair (pair (pair (pair (pair address
                                         nat
                                         (or (or address (pair address nat)) unit)
                                         (or (or address (pair address nat)) unit)
                                         nat)
                                   (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                             int
                             int)
                       (pair (pair nat nat) (pair nat nat))
                       bool
                       (big_map (pair nat bool) (pair int nat)))
                 (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                 (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                 nat
                 (big_map
                    int
                    (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))
           { UNPAIR ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DUP 3 ;
             GET ;
             IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
             PUSH nat 0 ;
             DUP 2 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             COMPARE ;
             EQ ;
             IF { DUP 2 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  DUP ;
                  DUP 3 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  GET ;
                  IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
                  DUP 2 ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
                  DUP 5 ;
                  DUP 6 ;
                  CDR ;
                  DUP ;
                  CDR ;
                  DUP ;
                  CDR ;
                  DIG 6 ;
                  DUP 10 ;
                  NONE (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int) ;
                  SWAP ;
                  UPDATE ;
                  DUP 7 ;
                  DIG 7 ;
                  CAR ;
                  DUP ;
                  CAR ;
                  DUP ;
                  CDR ;
                  DUP 11 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  UPDATE 2 ;
                  UPDATE 2 ;
                  UPDATE 1 ;
                  UPDATE 1 ;
                  SOME ;
                  DUP 8 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  UPDATE ;
                  DUP 6 ;
                  DIG 6 ;
                  CAR ;
                  DUP ;
                  CDR ;
                  DUP ;
                  CAR ;
                  DUP 10 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CAR ;
                  UPDATE 1 ;
                  UPDATE 1 ;
                  UPDATE 2 ;
                  UPDATE 1 ;
                  SOME ;
                  DUP 7 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  UPDATE ;
                  UPDATE 2 ;
                  UPDATE 2 ;
                  UPDATE 2 ;
                  UPDATE 2 ;
                  DUP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  DUP ;
                  CDR ;
                  DIG 6 ;
                  DUP 7 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  COMPARE ;
                  EQ ;
                  IF { DIG 5 ; DROP ; DIG 4 ; CAR ; CDR ; CAR ; CAR }
                     { DIG 4 ; DROP ; DIG 4 ; CAR ; CAR ; CDR ; CDR } ;
                  UPDATE 2 ;
                  UPDATE 2 ;
                  UPDATE 1 ;
                  UPDATE 1 }
                { DIG 2 ; DROP 2 } } ;
         LAMBDA
           (pair (lambda (pair int nat) nat)
                 (pair (pair (pair (pair (pair (pair address
                                                     nat
                                                     (or (or address (pair address nat)) unit)
                                                     (or (or address (pair address nat)) unit)
                                                     nat)
                                               (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                         int
                                         int)
                                   (pair (pair nat nat) (pair nat nat))
                                   bool
                                   (big_map (pair nat bool) (pair int nat)))
                             (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                             (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                             nat
                             (big_map
                                int
                                (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))
                       int
                       int))
           (pair int int)
           { UNPAIR ;
             SWAP ;
             UNPAIR 3 ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DUP 3 ;
             GET ;
             IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
             DUP 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DUP 5 ;
             GET ;
             IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
             DIG 4 ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             COMPARE ;
             GE ;
             IF { PUSH nat 311 ;
                  DUP 2 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  SUB ;
                  PAIR ;
                  DUP 6 ;
                  SWAP ;
                  EXEC ;
                  PUSH nat 311 ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  SUB ;
                  PAIR ;
                  DUP 6 ;
                  SWAP ;
                  EXEC ;
                  PAIR }
                { CAR ; CAR ; CAR ; CAR } ;
             DIG 3 ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             COMPARE ;
             GE ;
             IF { DIG 3 ; DROP ; SWAP ; CAR ; CAR ; CAR ; CAR }
                { PUSH nat 312 ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  CDR ;
                  SUB ;
                  PAIR ;
                  DUP 5 ;
                  SWAP ;
                  EXEC ;
                  PUSH nat 312 ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  SUB ;
                  PAIR ;
                  DIG 4 ;
                  SWAP ;
                  EXEC ;
                  PAIR } ;
             DUP ;
             CDR ;
             DUP 3 ;
             CDR ;
             DUP 5 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             CDR ;
             SUB ;
             SUB ;
             SWAP ;
             CAR ;
             DIG 2 ;
             CAR ;
             DIG 3 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             CAR ;
             SUB ;
             SUB ;
             PAIR } ;
         DUP 8 ;
         APPLY ;
         LAMBDA
           (pair (pair (lambda (pair address address nat (or (or address (pair address nat)) unit)) operation)
                       (lambda (pair int nat) nat)
                       (lambda (pair int int) int))
                 (pair (pair (pair (pair (pair (pair address
                                                     nat
                                                     (or (or address (pair address nat)) unit)
                                                     (or (or address (pair address nat)) unit)
                                                     nat)
                                               (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                         int
                                         int)
                                   (pair (pair nat nat) (pair nat nat))
                                   bool
                                   (big_map (pair nat bool) (pair int nat)))
                             (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                             (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                             nat
                             (big_map
                                int
                                (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))
                       int
                       int
                       (pair nat nat)
                       address
                       address
                       int
                       nat
                       nat))
           (pair (list operation)
                 (pair (pair (pair (pair address
                                         nat
                                         (or (or address (pair address nat)) unit)
                                         (or (or address (pair address nat)) unit)
                                         nat)
                                   (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                             int
                             int)
                       (pair (pair nat nat) (pair nat nat))
                       bool
                       (big_map (pair nat bool) (pair int nat)))
                 (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                 (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                 nat
                 (big_map
                    int
                    (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR 8 ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DUP ;
             DUP 5 ;
             GET ;
             IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
             SWAP ;
             DUP 4 ;
             GET ;
             IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
             SWAP ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             SWAP ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DUP 4 ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             COMPARE ;
             LT ;
             IF { DIG 3 ;
                  DIG 4 ;
                  DROP 2 ;
                  PUSH int 0 ;
                  DUP 3 ;
                  DUP 3 ;
                  MUL ;
                  INT ;
                  PUSH nat 80 ;
                  PUSH nat 318 ;
                  DIG 4 ;
                  DIG 5 ;
                  SUB ;
                  PAIR ;
                  DIG 11 ;
                  SWAP ;
                  EXEC ;
                  LSL ;
                  INT ;
                  DIG 7 ;
                  MUL ;
                  PAIR ;
                  DIG 8 ;
                  SWAP ;
                  EXEC }
                { DIG 4 ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  COMPARE ;
                  LT ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  CAR ;
                  DIG 5 ;
                  COMPARE ;
                  LE ;
                  AND ;
                  IF { DUP 3 ;
                       DUP 4 ;
                       CDR ;
                       DUP ;
                       CAR ;
                       DUP ;
                       CAR ;
                       PUSH nat 111 ;
                       DUP 12 ;
                       DIG 8 ;
                       CDR ;
                       CAR ;
                       CAR ;
                       CAR ;
                       ADD ;
                       PAIR ;
                       DUP 14 ;
                       SWAP ;
                       EXEC ;
                       UPDATE 1 ;
                       UPDATE 1 ;
                       UPDATE 1 ;
                       UPDATE 2 ;
                       PUSH int 1208925819614629174706176 ;
                       DIG 2 ;
                       DUP 3 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       SUB ;
                       DUP 8 ;
                       MUL ;
                       PAIR ;
                       DUP 11 ;
                       SWAP ;
                       EXEC ;
                       DUP 3 ;
                       DUP 3 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       MUL ;
                       INT ;
                       PUSH nat 80 ;
                       PUSH nat 319 ;
                       DUP 5 ;
                       CDR ;
                       CDR ;
                       CDR ;
                       CAR ;
                       DIG 6 ;
                       SUB ;
                       PAIR ;
                       DIG 11 ;
                       SWAP ;
                       EXEC ;
                       LSL ;
                       INT ;
                       DIG 7 ;
                       MUL ;
                       PAIR ;
                       DIG 8 ;
                       SWAP ;
                       EXEC }
                     { DIG 9 ;
                       DROP ;
                       PUSH int 1208925819614629174706176 ;
                       SWAP ;
                       DIG 2 ;
                       SUB ;
                       DIG 6 ;
                       MUL ;
                       PAIR ;
                       DIG 7 ;
                       SWAP ;
                       EXEC ;
                       PUSH int 0 } } ;
             PAIR ;
             SWAP ;
             DUP 6 ;
             CDR ;
             DUP 3 ;
             CDR ;
             SUB ;
             DIG 6 ;
             CAR ;
             DIG 3 ;
             CAR ;
             SUB ;
             PAIR ;
             DUP 3 ;
             CAR ;
             INT ;
             DUP 2 ;
             CAR ;
             COMPARE ;
             GT ;
             IF { DUP ; CAR ; DUP 4 ; CAR ; PAIR ; PUSH nat 106 ; PAIR ; FAILWITH } {} ;
             DUP 3 ;
             CDR ;
             INT ;
             DUP 2 ;
             CDR ;
             COMPARE ;
             GT ;
             IF { DUP ; CDR ; DIG 3 ; CDR ; PAIR ; PUSH nat 106 ; PAIR ; FAILWITH }
                { DIG 2 ; DROP } ;
             PUSH int 0 ;
             DUP 2 ;
             CAR ;
             COMPARE ;
             GT ;
             IF { DIG 2 ;
                  DROP ;
                  DUP 2 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET 5 ;
                  DUP 2 ;
                  CAR ;
                  ABS ;
                  SELF_ADDRESS ;
                  SENDER ;
                  PAIR 4 ;
                  DUP 5 ;
                  SWAP ;
                  EXEC }
                { DUP 2 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET 5 ;
                  DUP 2 ;
                  CAR ;
                  ABS ;
                  DIG 4 ;
                  SELF_ADDRESS ;
                  PAIR 4 ;
                  DUP 5 ;
                  SWAP ;
                  EXEC } ;
             PUSH int 0 ;
             DUP 3 ;
             CDR ;
             COMPARE ;
             GT ;
             IF { DIG 3 ;
                  DROP ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET 7 ;
                  DIG 2 ;
                  CDR ;
                  ABS ;
                  SELF_ADDRESS ;
                  SENDER ;
                  PAIR 4 ;
                  DIG 3 ;
                  SWAP ;
                  EXEC }
                { DUP 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET 7 ;
                  DIG 2 ;
                  CDR ;
                  ABS ;
                  DIG 4 ;
                  SELF_ADDRESS ;
                  PAIR 4 ;
                  DIG 3 ;
                  SWAP ;
                  EXEC } ;
             DIG 2 ;
             NIL operation ;
             DIG 2 ;
             CONS ;
             DIG 2 ;
             CONS ;
             PAIR } ;
         DUP 11 ;
         DUP 10 ;
         DUP 10 ;
         PAIR 3 ;
         APPLY ;
         DIG 10 ;
         DROP ;
         DIG 12 ;
         UNPAIR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         IF {} { PUSH nat 113 ; FAILWITH } ;
         DUP 2 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DUP ;
         CDR ;
         CAR ;
         DUP 2 ;
         CAR ;
         CDR ;
         GET ;
         IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
         NOW ;
         DUP 2 ;
         CDR ;
         COMPARE ;
         EQ ;
         IF { DROP 2 ; SWAP }
            { DUP ;
              CDR ;
              NOW ;
              SUB ;
              ABS ;
              NOW ;
              DUP 6 ;
              CAR ;
              CAR ;
              CDR ;
              CAR ;
              DUP 3 ;
              MUL ;
              DUP 4 ;
              CAR ;
              CDR ;
              CDR ;
              ADD ;
              DUP 7 ;
              CAR ;
              CAR ;
              CDR ;
              CAR ;
              PAIR ;
              DUP 7 ;
              CDR ;
              CAR ;
              CAR ;
              CAR ;
              PUSH nat 0 ;
              DUP 2 ;
              COMPARE ;
              EQ ;
              IF { DIG 3 ; DROP 2 ; PUSH nat 0 }
                 { PUSH nat 128 ;
                   DIG 4 ;
                   LSL ;
                   EDIV ;
                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                   CAR } ;
              DIG 3 ;
              CAR ;
              CAR ;
              CDR ;
              ADD ;
              DUP 6 ;
              CDR ;
              CAR ;
              CAR ;
              CAR ;
              PAIR ;
              PAIR ;
              PAIR ;
              PUSH nat 1 ;
              DUP 3 ;
              CAR ;
              CDR ;
              ADD ;
              PUSH int 1 ;
              DUP 4 ;
              CDR ;
              CDR ;
              SUB ;
              DUP 4 ;
              CAR ;
              CAR ;
              DUP 5 ;
              CAR ;
              CDR ;
              SUB ;
              COMPARE ;
              LT ;
              IF { PUSH bool False ; DUP 4 ; CAR ; CAR }
                 { PUSH bool True ; PUSH nat 1 ; DUP 5 ; CAR ; CAR ; ADD } ;
              DUP 5 ;
              CDR ;
              CAR ;
              DIG 4 ;
              DUP 5 ;
              SWAP ;
              SOME ;
              SWAP ;
              UPDATE ;
              DUP 7 ;
              DIG 7 ;
              CAR ;
              DUP ;
              CAR ;
              DUP ;
              CAR ;
              DUP 9 ;
              CDR ;
              CDR ;
              DIG 7 ;
              IF { DIG 5 ;
                   DIG 8 ;
                   CAR ;
                   CAR ;
                   NONE (pair (pair (pair nat nat) (pair int int)) timestamp) ;
                   SWAP ;
                   UPDATE }
                 { DIG 8 ; DROP ; DIG 5 } ;
              PAIR ;
              DIG 6 ;
              DIG 6 ;
              PAIR ;
              PAIR ;
              UPDATE 2 ;
              UPDATE 1 ;
              UPDATE 1 ;
              UPDATE 1 } ;
         SWAP ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DIG 7 ;
                 DIG 8 ;
                 DIG 10 ;
                 DIG 11 ;
                 DIG 12 ;
                 DROP 10 ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         IF_LEFT
                           { DIG 2 ;
                             DROP ;
                             DUP ;
                             CAR ;
                             MAP { DUP 3 ;
                                   CDR ;
                                   CDR ;
                                   CAR ;
                                   CAR ;
                                   DUP 2 ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { UNIT ; PUSH string "FA2_TOKEN_UNDEFINED" ; PAIR ; FAILWITH } {} ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   DUP 2 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH nat 1 } { PUSH nat 0 } ;
                                   SWAP ;
                                   PAIR } ;
                             SWAP ;
                             CDR ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             NIL operation ;
                             DIG 2 ;
                             CONS }
                           { IF_LEFT
                               { DIG 2 ;
                                 DROP ;
                                 ITER { SWAP ;
                                        DUP 2 ;
                                        CDR ;
                                        ITER { SWAP ;
                                               DUP 3 ;
                                               CAR ;
                                               DUP ;
                                               SENDER ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DROP }
                                                  { DUP 3 ;
                                                    GET 3 ;
                                                    SENDER ;
                                                    DIG 2 ;
                                                    PAIR 3 ;
                                                    DUP 2 ;
                                                    CDR ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    SWAP ;
                                                    MEM ;
                                                    IF {} { UNIT ; PUSH string "FA2_NOT_OPERATOR" ; PAIR ; FAILWITH } } ;
                                               DUP ;
                                               CDR ;
                                               CDR ;
                                               CAR ;
                                               CAR ;
                                               PUSH nat 0 ;
                                               DUP 4 ;
                                               GET 4 ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DIG 2 ; DROP }
                                                  { DUP ;
                                                    DUP 4 ;
                                                    GET 3 ;
                                                    GET ;
                                                    IF_NONE { UNIT ; PUSH string "FA2_TOKEN_UNDEFINED" ; PAIR ; FAILWITH } {} ;
                                                    DUP 5 ;
                                                    CAR ;
                                                    DUP 2 ;
                                                    CAR ;
                                                    CDR ;
                                                    CDR ;
                                                    COMPARE ;
                                                    EQ ;
                                                    IF { PUSH nat 1 } { PUSH nat 0 } ;
                                                    PUSH nat 1 ;
                                                    DUP 6 ;
                                                    GET 4 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    PUSH nat 1 ;
                                                    DUP 3 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    AND ;
                                                    IF { DROP }
                                                       { DUP 5 ;
                                                         GET 4 ;
                                                         PAIR ;
                                                         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                         PAIR ;
                                                         FAILWITH } ;
                                                    SWAP ;
                                                    DUP 2 ;
                                                    DIG 2 ;
                                                    CAR ;
                                                    DUP ;
                                                    CDR ;
                                                    DUP 6 ;
                                                    CAR ;
                                                    UPDATE 2 ;
                                                    UPDATE 2 ;
                                                    UPDATE 1 ;
                                                    DIG 3 ;
                                                    GET 3 ;
                                                    SWAP ;
                                                    SOME ;
                                                    SWAP ;
                                                    UPDATE } ;
                                               DUP 2 ;
                                               DIG 2 ;
                                               CDR ;
                                               DUP ;
                                               CDR ;
                                               DUP ;
                                               CAR ;
                                               DIG 4 ;
                                               UPDATE 1 ;
                                               UPDATE 1 ;
                                               UPDATE 2 ;
                                               UPDATE 2 } ;
                                        SWAP ;
                                        DROP } }
                               { DUP 2 ;
                                 CDR ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 SWAP ;
                                 ITER { IF_LEFT { DUP 4 ; SOME } { NONE unit } ;
                                        DUP 2 ;
                                        CAR ;
                                        SENDER ;
                                        COMPARE ;
                                        EQ ;
                                        IF {} { UNIT ; PUSH string "FA2_NOT_OWNER" ; PAIR ; FAILWITH } ;
                                        DIG 2 ;
                                        SWAP ;
                                        DIG 2 ;
                                        UPDATE } ;
                                 DIG 2 ;
                                 DROP ;
                                 DUP 2 ;
                                 DIG 2 ;
                                 CDR ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 CDR ;
                                 DIG 4 ;
                                 UPDATE 2 ;
                                 UPDATE 2 ;
                                 UPDATE 1 ;
                                 UPDATE 2 } ;
                             NIL operation } }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         VIEW "get_voter_address" address ;
                         IF_NONE { PUSH nat 403 ; FAILWITH } {} ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH nat 401 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         CONTRACT %add_fees
                           (pair (nat %epoch)
                                 (map %fees (or (or (address %fa12) (pair %fa2 address nat)) (unit %tez)) nat)) ;
                         IF_NONE { PUSH nat 403 ; FAILWITH } {} ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 5 ;
                         DUP 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 4 ;
                         CDR ;
                         SELF_ADDRESS ;
                         PAIR 4 ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 7 ;
                         DUP 5 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         CDR ;
                         SELF_ADDRESS ;
                         PAIR 4 ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         PUSH mutez 0 ;
                         EMPTY_MAP (or (or address (pair address nat)) unit) nat ;
                         DUP 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 7 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 8 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 5 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DIG 5 ;
                         CAR ;
                         PAIR ;
                         TRANSFER_TOKENS ;
                         DUP 4 ;
                         DIG 4 ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         DIG 2 ;
                         CONS ;
                         DIG 2 ;
                         CONS } }
                   { IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP ;
                         CDR ;
                         CAR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
                         DIG 2 ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DUP 4 ;
                         CDR ;
                         CDR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         ADD ;
                         DUP 5 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         LEFT (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) ;
                         LOOP_LEFT
                           { UNPAIR ;
                             DUP 3 ;
                             DUP 3 ;
                             COMPARE ;
                             GE ;
                             IF { SWAP ;
                                  DROP ;
                                  RIGHT (pair (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat) }
                                { PUSH nat 1 ;
                                  DUP 3 ;
                                  ADD ;
                                  SWAP ;
                                  DUP 6 ;
                                  DIG 3 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  PAIR ;
                                  LEFT (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) } } ;
                         SWAP ;
                         DIG 3 ;
                         DROP 2 ;
                         DUP 4 ;
                         DIG 4 ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DUP 7 ;
                         DIG 7 ;
                         CDR ;
                         DIG 7 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         DUP ;
                         CDR ;
                         DIG 6 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         NIL operation }
                       { DROP ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         VIEW "get_dev_address" address ;
                         IF_NONE { PUSH nat 403 ; FAILWITH } {} ;
                         DUP ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH nat 401 ; FAILWITH } {} ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 5 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 3 ;
                         SELF_ADDRESS ;
                         PAIR 4 ;
                         DUP 4 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 7 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         SELF_ADDRESS ;
                         PAIR 4 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         DIG 3 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         PUSH nat 0 ;
                         PUSH nat 0 ;
                         PAIR ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         DIG 2 ;
                         CONS } } ;
                 PAIR }
               { DIG 13 ;
                 DROP ;
                 IF_LEFT
                   { DIG 4 ;
                     DIG 7 ;
                     DIG 8 ;
                     DIG 9 ;
                     DIG 11 ;
                     DIG 12 ;
                     DROP 6 ;
                     IF_LEFT
                       { DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         IF { NOW ; SWAP ; PAIR ; PUSH nat 103 ; PAIR ; FAILWITH } { DROP } ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 8 ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         EDIV ;
                         IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 112 ; FAILWITH } ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         EDIV ;
                         IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 112 ; FAILWITH } ;
                         DUP ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF { PUSH nat 110 ; FAILWITH } {} ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { DIG 2 ; DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 6 ; NIL operation ; PAIR }
                            { DUP ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              GE ;
                              IF { DUP 2 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DUP ;
                                   CDR ;
                                   CAR ;
                                   SWAP ;
                                   CAR ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
                                   DUP ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   PUSH nat 302 ;
                                   PUSH timestamp 0 ;
                                   NOW ;
                                   SUB ;
                                   PAIR ;
                                   DUP 10 ;
                                   SWAP ;
                                   EXEC ;
                                   PAIR ;
                                   DUP 4 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   CAR ;
                                   CDR ;
                                   CDR }
                                 { PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   PUSH int 0 } ;
                              DIG 2 ;
                              UNPAIR ;
                              DUP 6 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              PAIR ;
                              SWAP ;
                              DIG 3 ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              PAIR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 5 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP 7 ;
                              SWAP ;
                              EXEC ;
                              DUP 2 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              COMPARE ;
                              GE ;
                              IF { DUP 3 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DUP ;
                                   CDR ;
                                   CAR ;
                                   SWAP ;
                                   CAR ;
                                   CDR ;
                                   GET ;
                                   IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
                                   DUP ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   PUSH nat 302 ;
                                   PUSH timestamp 0 ;
                                   NOW ;
                                   SUB ;
                                   PAIR ;
                                   DIG 10 ;
                                   SWAP ;
                                   EXEC ;
                                   PAIR ;
                                   DUP 5 ;
                                   CAR ;
                                   CDR ;
                                   CAR ;
                                   CDR ;
                                   DIG 2 ;
                                   CAR ;
                                   CDR ;
                                   CDR }
                                 { DIG 7 ;
                                   DROP ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   PUSH int 0 } ;
                              DIG 2 ;
                              UNPAIR ;
                              DUP 7 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 2 ;
                              PAIR ;
                              SWAP ;
                              DIG 3 ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              DUP 4 ;
                              CDR ;
                              CDR ;
                              PAIR ;
                              DUP 4 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 6 ;
                              SWAP ;
                              EXEC ;
                              DUP 2 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 5 ;
                              DIG 5 ;
                              CDR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              DUP 7 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 3 ;
                              COMPARE ;
                              LE ;
                              DUP 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 4 ;
                              COMPARE ;
                              GT ;
                              AND ;
                              IF { DUP ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   DUP ;
                                   CDR ;
                                   DIG 4 ;
                                   UPDATE 2 ;
                                   UPDATE 2 ;
                                   UPDATE 1 ;
                                   UPDATE 1 }
                                 { SWAP ; DROP } ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 3 ;
                              COMPARE ;
                              LE ;
                              DUP 2 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 4 ;
                              COMPARE ;
                              GT ;
                              AND ;
                              IF { DUP ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   DUP ;
                                   CDR ;
                                   DIG 4 ;
                                   UPDATE 2 ;
                                   UPDATE 2 ;
                                   UPDATE 1 ;
                                   UPDATE 1 }
                                 { SWAP ; DROP } ;
                              DUP 3 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              SENDER ;
                              DUP 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              DUP 5 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DUP 6 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DUP 7 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DUP 6 ;
                              PAIR 3 ;
                              DIG 8 ;
                              SWAP ;
                              EXEC ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              INT ;
                              PUSH int 1 ;
                              DUP 6 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 5 ;
                              PAIR 4 ;
                              DUP 6 ;
                              SWAP ;
                              EXEC ;
                              DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              NEG ;
                              PUSH int 1 ;
                              DUP 6 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              PAIR 4 ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              DIG 3 ;
                              CDR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              DIG 4 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              DUP ;
                              DUP 2 ;
                              CDR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              DUP 5 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DIG 6 ;
                              DUP 7 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 1 ;
                              UPDATE 1 ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              PUSH nat 1 ;
                              DIG 5 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              ADD ;
                              UPDATE 1 ;
                              UPDATE 2 ;
                              UPDATE 1 ;
                              UPDATE 2 ;
                              PUSH nat 0 ;
                              PUSH nat 0 ;
                              PAIR ;
                              DUP 3 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              INT ;
                              SELF_ADDRESS ;
                              SELF_ADDRESS ;
                              DUP 6 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DUP 7 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 7 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 7 ;
                              PAIR 8 ;
                              EXEC } }
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 6 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH nat 401 ; FAILWITH } {} ;
                         DUP ;
                         DUP 2 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         NOT ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         NIL operation ;
                         PAIR } }
                   { DIG 6 ;
                     DROP ;
                     IF_LEFT
                       { DIG 6 ;
                         DIG 7 ;
                         DIG 8 ;
                         DIG 10 ;
                         DIG 11 ;
                         DROP 5 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         IF { NOW ; SWAP ; PAIR ; PUSH nat 103 ; PAIR ; FAILWITH } { DROP } ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         GET ;
                         IF_NONE { UNIT ; PUSH string "FA2_TOKEN_UNDEFINED" ; PAIR ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         PAIR 3 ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         PUSH nat 128 ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH nat 317 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CDR ;
                         SUB ;
                         PAIR ;
                         DUP 11 ;
                         SWAP ;
                         EXEC ;
                         MUL ;
                         LSR ;
                         PUSH nat 128 ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         PUSH nat 316 ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DUP 6 ;
                         CAR ;
                         SUB ;
                         PAIR ;
                         DUP 12 ;
                         SWAP ;
                         EXEC ;
                         MUL ;
                         LSR ;
                         PAIR ;
                         DUP 3 ;
                         DIG 3 ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DIG 4 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         DUP 4 ;
                         DUP 5 ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DIG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 6 ;
                         DUP 9 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         PUSH nat 111 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         PAIR ;
                         DIG 8 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         DIG 3 ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DUP 4 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         PUSH nat 0 ;
                         DIG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH int -1 } { PUSH int 0 } ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 2 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 6 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR 4 ;
                         DUP 9 ;
                         SWAP ;
                         EXEC ;
                         DUP 6 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         NEG ;
                         DIG 2 ;
                         DUP 4 ;
                         CDR ;
                         DIG 3 ;
                         PAIR 4 ;
                         DIG 7 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         DUP 4 ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DIG 4 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         DIG 3 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 6 ;
                         CDR ;
                         CDR ;
                         DUP 7 ;
                         CDR ;
                         CAR ;
                         DUP 8 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 7 ;
                         CDR ;
                         DUP 8 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 8 ;
                         DIG 8 ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DIG 12 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         DUP 13 ;
                         DUP 15 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         PAIR 8 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         UNPAIR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PUSH nat 0 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         COMPARE ;
                         EQ ;
                         IF { DUP 3 ;
                              DUP 4 ;
                              CDR ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              DIG 6 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DIG 8 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              NONE (pair (pair (pair (pair int int) nat) int address) int) ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 1 ;
                              UPDATE 1 ;
                              UPDATE 2 ;
                              UPDATE 2 }
                            { DIG 4 ; DROP ; DIG 2 } ;
                         PAIR ;
                         DUP 4 ;
                         SWAP ;
                         EXEC ;
                         DIG 2 ;
                         CDR ;
                         SWAP ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         PAIR }
                       { DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 4 ;
                         DUP ;
                         CAR ;
                         CAR ;
                         DUP ;
                         NOW ;
                         COMPARE ;
                         GT ;
                         IF { NOW ; SWAP ; PAIR ; PUSH nat 103 ; PAIR ; FAILWITH } { DROP } ;
                         DUP ;
                         CAR ;
                         CDR ;
                         DUP 3 ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         PAIR ;
                         PUSH nat 0 ;
                         DUP 3 ;
                         PAIR ;
                         PAIR ;
                         LEFT (pair (pair nat nat)
                                    (pair nat nat)
                                    (pair (pair (pair (pair (pair address
                                                                  nat
                                                                  (or (or address (pair address nat)) unit)
                                                                  (or (or address (pair address nat)) unit)
                                                                  nat)
                                                            (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                      int
                                                      int)
                                                (pair (pair nat nat) (pair nat nat))
                                                bool
                                                (big_map (pair nat bool) (pair int nat)))
                                          (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                          (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                          nat
                                          (big_map
                                             int
                                             (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) ;
                         LOOP_LEFT
                           { PUSH nat 0 ;
                             DUP 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             COMPARE ;
                             EQ ;
                             IF { RIGHT
                                    (pair (pair nat nat)
                                          (pair nat nat)
                                          (pair (pair (pair (pair (pair address
                                                                        nat
                                                                        (or (or address (pair address nat)) unit)
                                                                        (or (or address (pair address nat)) unit)
                                                                        nat)
                                                                  (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                            int
                                                            int)
                                                      (pair (pair nat nat) (pair nat nat))
                                                      bool
                                                      (big_map (pair nat bool) (pair int nat)))
                                                (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                                (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                                nat
                                                (big_map
                                                   int
                                                   (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) }
                                { PUSH nat 10000 ;
                                  DUP 2 ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  GET 3 ;
                                  DUP 3 ;
                                  CAR ;
                                  CAR ;
                                  MUL ;
                                  PAIR ;
                                  DUP 10 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP 2 ;
                                  CDR ;
                                  CAR ;
                                  UNPAIR ;
                                  PUSH nat 10000 ;
                                  SWAP ;
                                  DUP 4 ;
                                  MUL ;
                                  PAIR ;
                                  DUP 11 ;
                                  SWAP ;
                                  EXEC ;
                                  PUSH nat 0 ;
                                  DUP 3 ;
                                  COMPARE ;
                                  GT ;
                                  IF { PUSH nat 10000 ; DIG 2 ; DUP 4 ; MUL ; PAIR ; DUP 11 ; SWAP ; EXEC }
                                     { SWAP ; DROP ; PUSH nat 0 } ;
                                  PUSH nat 404 ;
                                  DUP 2 ;
                                  DUP 4 ;
                                  DIG 5 ;
                                  SUB ;
                                  SUB ;
                                  PAIR ;
                                  DUP 10 ;
                                  SWAP ;
                                  EXEC ;
                                  SWAP ;
                                  DUG 2 ;
                                  PUSH nat 303 ;
                                  DUP 2 ;
                                  DUP 6 ;
                                  CAR ;
                                  CAR ;
                                  SUB ;
                                  PAIR ;
                                  DUP 11 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP 5 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  DUP 6 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CAR ;
                                  DUP 2 ;
                                  DIG 3 ;
                                  MUL ;
                                  PUSH nat 80 ;
                                  DUP 3 ;
                                  LSL ;
                                  ADD ;
                                  PUSH nat 80 ;
                                  DIG 3 ;
                                  DIG 3 ;
                                  MUL ;
                                  LSL ;
                                  PAIR ;
                                  DUP 12 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP 5 ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  DUP 2 ;
                                  DUP 7 ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  DUP 8 ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  PAIR 4 ;
                                  DUP 10 ;
                                  SWAP ;
                                  EXEC ;
                                  DUP 6 ;
                                  CDR ;
                                  CDR ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  CDR ;
                                  DUP 2 ;
                                  COMPARE ;
                                  GE ;
                                  IF { PUSH nat 80 ;
                                       DUP 7 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       PUSH nat 304 ;
                                       DUP 5 ;
                                       DUP 10 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 15 ;
                                       SWAP ;
                                       EXEC ;
                                       MUL ;
                                       LSR ;
                                       DUP 7 ;
                                       CDR ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DIG 6 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DIG 5 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP 9 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       DUP 10 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       PUSH nat 128 ;
                                       DIG 8 ;
                                       LSL ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                       CAR ;
                                       DUP 10 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       DIG 6 ;
                                       DUP 9 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP 7 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       DIG 6 ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP 3 ;
                                       DUP 4 ;
                                       CDR ;
                                       DIG 2 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       PUSH nat 0 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CAR ;
                                       DIG 2 ;
                                       DIG 3 ;
                                       CAR ;
                                       CDR ;
                                       ADD ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       RIGHT
                                         (pair (pair nat nat)
                                               (pair nat nat)
                                               (pair (pair (pair (pair (pair address
                                                                             nat
                                                                             (or (or address (pair address nat)) unit)
                                                                             (or (or address (pair address nat)) unit)
                                                                             nat)
                                                                       (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                                 int
                                                                 int)
                                                           (pair (pair nat nat) (pair nat nat))
                                                           bool
                                                           (big_map (pair nat bool) (pair int nat)))
                                                     (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                                     (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                                     nat
                                                     (big_map
                                                        int
                                                        (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) }
                                     { DROP 5 ;
                                       DUP ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       DUP 2 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       GET ;
                                       IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
                                       PUSH nat 326 ;
                                       PUSH nat 1 ;
                                       DUP 3 ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 9 ;
                                       SWAP ;
                                       EXEC ;
                                       PUSH nat 80 ;
                                       PUSH nat 304 ;
                                       DUP 3 ;
                                       DUP 6 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 11 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP 5 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       MUL ;
                                       LSR ;
                                       DUP 2 ;
                                       DUP 5 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       MUL ;
                                       PUSH nat 160 ;
                                       DUP 3 ;
                                       LSL ;
                                       PAIR ;
                                       DUP 13 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP 5 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       GET 3 ;
                                       PUSH nat 10000 ;
                                       SUB ;
                                       ABS ;
                                       PUSH nat 10000 ;
                                       DUP 3 ;
                                       MUL ;
                                       PAIR ;
                                       DUP 14 ;
                                       SWAP ;
                                       EXEC ;
                                       PUSH nat 300 ;
                                       DIG 2 ;
                                       DUP 3 ;
                                       SUB ;
                                       PAIR ;
                                       DUP 12 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP 6 ;
                                       CDR ;
                                       CAR ;
                                       UNPAIR ;
                                       PUSH nat 10000 ;
                                       SWAP ;
                                       DUP 4 ;
                                       MUL ;
                                       PAIR ;
                                       DUP 15 ;
                                       SWAP ;
                                       EXEC ;
                                       PUSH nat 0 ;
                                       DUP 3 ;
                                       COMPARE ;
                                       GT ;
                                       IF { PUSH nat 10000 ; DIG 2 ; DUP 4 ; MUL ; PAIR ; DUP 15 ; SWAP ; EXEC }
                                          { SWAP ; DROP ; PUSH nat 0 } ;
                                       PUSH nat 404 ;
                                       DUP 2 ;
                                       DUP 4 ;
                                       DIG 5 ;
                                       SUB ;
                                       SUB ;
                                       PAIR ;
                                       DUP 14 ;
                                       SWAP ;
                                       EXEC ;
                                       SWAP ;
                                       DUG 2 ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       PUSH nat 128 ;
                                       DIG 2 ;
                                       LSL ;
                                       PAIR ;
                                       DUP 15 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       ADD ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       SWAP ;
                                       UPDATE 1 ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       CAR ;
                                       SWAP ;
                                       CAR ;
                                       CDR ;
                                       GET ;
                                       IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
                                       DUP 8 ;
                                       CDR ;
                                       DUP 2 ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       SUB ;
                                       PUSH nat 306 ;
                                       DUP 10 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       DUP 5 ;
                                       CDR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 17 ;
                                       SWAP ;
                                       EXEC ;
                                       PUSH nat 306 ;
                                       DUP 11 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       DUP 6 ;
                                       CAR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 18 ;
                                       SWAP ;
                                       EXEC ;
                                       PAIR ;
                                       PUSH nat 320 ;
                                       DUP 11 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       PUSH timestamp 0 ;
                                       NOW ;
                                       SUB ;
                                       SUB ;
                                       PAIR ;
                                       DUP 18 ;
                                       SWAP ;
                                       EXEC ;
                                       PUSH nat 324 ;
                                       DUP 12 ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       DIG 5 ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 18 ;
                                       SWAP ;
                                       EXEC ;
                                       DUP 12 ;
                                       CDR ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP 15 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DIG 13 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       PUSH int 1 ;
                                       DUP 16 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       SUB ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP 15 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       DUP 15 ;
                                       DIG 9 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       DIG 11 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DIG 10 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DIG 9 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       SOME ;
                                       DUP 13 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       CDR ;
                                       UPDATE ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DIG 4 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       PUSH nat 308 ;
                                       DIG 9 ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       CDR ;
                                       DUP 11 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 16 ;
                                       SWAP ;
                                       EXEC ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP 9 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       DIG 5 ;
                                       DUP 10 ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       CAR ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       DUP 8 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       DIG 5 ;
                                       DUP 9 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       ADD ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP 4 ;
                                       DUP 5 ;
                                       CDR ;
                                       DIG 2 ;
                                       UPDATE 2 ;
                                       UPDATE 2 ;
                                       DUP ;
                                       CAR ;
                                       PUSH nat 307 ;
                                       DIG 3 ;
                                       DUP 6 ;
                                       CAR ;
                                       CAR ;
                                       SUB ;
                                       PAIR ;
                                       DUP 11 ;
                                       SWAP ;
                                       EXEC ;
                                       UPDATE 1 ;
                                       UPDATE 1 ;
                                       DUP ;
                                       CAR ;
                                       DIG 2 ;
                                       DIG 3 ;
                                       CAR ;
                                       CDR ;
                                       ADD ;
                                       UPDATE 2 ;
                                       UPDATE 1 ;
                                       LEFT (pair (pair nat nat)
                                                  (pair nat nat)
                                                  (pair (pair (pair (pair (pair address
                                                                                nat
                                                                                (or (or address (pair address nat)) unit)
                                                                                (or (or address (pair address nat)) unit)
                                                                                nat)
                                                                          (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                                    int
                                                                    int)
                                                              (pair (pair nat nat) (pair nat nat))
                                                              bool
                                                              (big_map (pair nat bool) (pair int nat)))
                                                        (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                                        (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                                        nat
                                                        (big_map
                                                           int
                                                           (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) } } } ;
                         DIG 4 ;
                         DIG 7 ;
                         DIG 8 ;
                         DROP 3 ;
                         PUSH nat 309 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         DIG 3 ;
                         SUB ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DUP 2 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { SWAP ;
                              DIG 2 ;
                              DIG 4 ;
                              DIG 5 ;
                              DROP 4 ;
                              SWAP ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              PUSH nat 104 ;
                              PAIR ;
                              FAILWITH }
                            { DUP 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              GET 5 ;
                              DIG 2 ;
                              SELF_ADDRESS ;
                              SENDER ;
                              PAIR 4 ;
                              DUP 6 ;
                              SWAP ;
                              EXEC ;
                              DIG 4 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              GET 7 ;
                              DIG 2 ;
                              DIG 4 ;
                              CDR ;
                              CDR ;
                              SELF_ADDRESS ;
                              PAIR 4 ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              DIG 2 ;
                              CDR ;
                              CDR ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              DIG 2 ;
                              CONS ;
                              PAIR } } } } }
           { DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 13 ;
             DROP 6 ;
             DUP ;
             CAR ;
             CAR ;
             DUP ;
             NOW ;
             COMPARE ;
             GT ;
             IF { NOW ; SWAP ; PAIR ; PUSH nat 103 ; PAIR ; FAILWITH } { DROP } ;
             DUP 2 ;
             DUP 3 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             DUP 4 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             PAIR ;
             DUP 2 ;
             CAR ;
             CDR ;
             PUSH nat 0 ;
             PAIR ;
             PAIR ;
             LEFT (pair (pair nat nat)
                        (pair nat nat)
                        (pair (pair (pair (pair (pair address
                                                      nat
                                                      (or (or address (pair address nat)) unit)
                                                      (or (or address (pair address nat)) unit)
                                                      nat)
                                                (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                          int
                                          int)
                                    (pair (pair nat nat) (pair nat nat))
                                    bool
                                    (big_map (pair nat bool) (pair int nat)))
                              (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                              (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                              nat
                              (big_map
                                 int
                                 (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) ;
             LOOP_LEFT
               { PUSH nat 0 ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 COMPARE ;
                 EQ ;
                 IF { RIGHT
                        (pair (pair nat nat)
                              (pair nat nat)
                              (pair (pair (pair (pair (pair address
                                                            nat
                                                            (or (or address (pair address nat)) unit)
                                                            (or (or address (pair address nat)) unit)
                                                            nat)
                                                      (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                int
                                                int)
                                          (pair (pair nat nat) (pair nat nat))
                                          bool
                                          (big_map (pair nat bool) (pair int nat)))
                                    (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                    (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                    nat
                                    (big_map
                                       int
                                       (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) }
                    { PUSH nat 10000 ;
                      DUP 2 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      CAR ;
                      CAR ;
                      GET 3 ;
                      DUP 3 ;
                      CAR ;
                      CDR ;
                      MUL ;
                      PAIR ;
                      DUP 9 ;
                      SWAP ;
                      EXEC ;
                      DUP 2 ;
                      CDR ;
                      CAR ;
                      UNPAIR ;
                      PUSH nat 10000 ;
                      SWAP ;
                      DUP 4 ;
                      MUL ;
                      PAIR ;
                      DUP 10 ;
                      SWAP ;
                      EXEC ;
                      PUSH nat 0 ;
                      DUP 3 ;
                      COMPARE ;
                      GT ;
                      IF { PUSH nat 10000 ; DIG 2 ; DUP 4 ; MUL ; PAIR ; DUP 10 ; SWAP ; EXEC }
                         { SWAP ; DROP ; PUSH nat 0 } ;
                      PUSH nat 404 ;
                      DUP 2 ;
                      DUP 4 ;
                      DIG 5 ;
                      SUB ;
                      SUB ;
                      PAIR ;
                      DUP 9 ;
                      SWAP ;
                      EXEC ;
                      SWAP ;
                      DUG 2 ;
                      PUSH nat 303 ;
                      DUP 2 ;
                      DUP 6 ;
                      CAR ;
                      CDR ;
                      SUB ;
                      PAIR ;
                      DUP 10 ;
                      SWAP ;
                      EXEC ;
                      DUP 5 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DUP 6 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PUSH nat 80 ;
                      DIG 3 ;
                      LSL ;
                      PAIR ;
                      DUP 13 ;
                      SWAP ;
                      EXEC ;
                      ADD ;
                      DUP 5 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      DUP 2 ;
                      DUP 7 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      DUP 8 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      PAIR 4 ;
                      DUP 9 ;
                      SWAP ;
                      EXEC ;
                      DUP 6 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      DUP 7 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      GET ;
                      IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CDR ;
                      DUP ;
                      DUP 3 ;
                      COMPARE ;
                      LT ;
                      IF { DROP ;
                           DUP 6 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DUP 3 ;
                           MUL ;
                           PUSH nat 80 ;
                           PUSH nat 305 ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DUP 6 ;
                           SUB ;
                           PAIR ;
                           DUP 14 ;
                           SWAP ;
                           EXEC ;
                           LSL ;
                           DUP 8 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           MUL ;
                           PAIR ;
                           DUP 13 ;
                           SWAP ;
                           EXEC ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DIG 6 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DIG 5 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DUP 10 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PUSH nat 128 ;
                           DIG 8 ;
                           LSL ;
                           EDIV ;
                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                           CAR ;
                           DUP 10 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CDR ;
                           ADD ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DUP 8 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           DIG 6 ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           ADD ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DIG 6 ;
                           DUP 8 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CDR ;
                           ADD ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP 3 ;
                           DUP 4 ;
                           CDR ;
                           DIG 2 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           PUSH nat 0 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DIG 2 ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           ADD ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           RIGHT
                             (pair (pair nat nat)
                                   (pair nat nat)
                                   (pair (pair (pair (pair (pair address
                                                                 nat
                                                                 (or (or address (pair address nat)) unit)
                                                                 (or (or address (pair address nat)) unit)
                                                                 nat)
                                                           (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                     int
                                                     int)
                                               (pair (pair nat nat) (pair nat nat))
                                               bool
                                               (big_map (pair nat bool) (pair int nat)))
                                         (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                         (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                         nat
                                         (big_map
                                            int
                                            (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) }
                         { SWAP ;
                           DIG 2 ;
                           DIG 3 ;
                           DIG 4 ;
                           DIG 5 ;
                           DROP 5 ;
                           DUP 2 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DUP 2 ;
                           GET ;
                           IF_NONE { PUSH nat 301 ; FAILWITH } {} ;
                           DUP ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DUP 4 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DUP 2 ;
                           MUL ;
                           PUSH nat 80 ;
                           PUSH nat 305 ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DUP 5 ;
                           SUB ;
                           PAIR ;
                           DUP 12 ;
                           SWAP ;
                           EXEC ;
                           LSL ;
                           DUP 6 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           MUL ;
                           PAIR ;
                           DUP 11 ;
                           SWAP ;
                           EXEC ;
                           PUSH nat 1208925819614629174706176 ;
                           PUSH nat 304 ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DUP 5 ;
                           SUB ;
                           PAIR ;
                           DUP 12 ;
                           SWAP ;
                           EXEC ;
                           DUP 7 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           MUL ;
                           PAIR ;
                           DUP 13 ;
                           SWAP ;
                           EXEC ;
                           DUP 6 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           GET 3 ;
                           PUSH nat 10000 ;
                           SUB ;
                           ABS ;
                           PUSH nat 10000 ;
                           DUP 3 ;
                           MUL ;
                           PAIR ;
                           DUP 14 ;
                           SWAP ;
                           EXEC ;
                           PUSH nat 300 ;
                           DIG 2 ;
                           DUP 3 ;
                           SUB ;
                           PAIR ;
                           DUP 12 ;
                           SWAP ;
                           EXEC ;
                           DUP 7 ;
                           CDR ;
                           CAR ;
                           UNPAIR ;
                           PUSH nat 10000 ;
                           SWAP ;
                           DUP 4 ;
                           MUL ;
                           PAIR ;
                           DUP 15 ;
                           SWAP ;
                           EXEC ;
                           PUSH nat 0 ;
                           DUP 3 ;
                           COMPARE ;
                           GT ;
                           IF { PUSH nat 10000 ; DIG 2 ; DUP 4 ; MUL ; PAIR ; DUP 15 ; SWAP ; EXEC }
                              { SWAP ; DROP ; PUSH nat 0 } ;
                           PUSH nat 404 ;
                           DUP 2 ;
                           DUP 4 ;
                           DIG 5 ;
                           SUB ;
                           SUB ;
                           PAIR ;
                           DUP 14 ;
                           SWAP ;
                           EXEC ;
                           SWAP ;
                           DUG 2 ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PUSH nat 128 ;
                           DIG 2 ;
                           LSL ;
                           PAIR ;
                           DUP 15 ;
                           SWAP ;
                           EXEC ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CDR ;
                           ADD ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           SWAP ;
                           UPDATE 2 ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DUP ;
                           CDR ;
                           CAR ;
                           SWAP ;
                           CAR ;
                           CDR ;
                           GET ;
                           IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
                           DUP 8 ;
                           CDR ;
                           DUP 2 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           SUB ;
                           PUSH nat 306 ;
                           DUP 10 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DUP 5 ;
                           CDR ;
                           SUB ;
                           PAIR ;
                           DUP 17 ;
                           SWAP ;
                           EXEC ;
                           PUSH nat 306 ;
                           DUP 11 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           DUP 6 ;
                           CAR ;
                           SUB ;
                           PAIR ;
                           DUP 18 ;
                           SWAP ;
                           EXEC ;
                           PAIR ;
                           PUSH nat 320 ;
                           DUP 11 ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           PUSH timestamp 0 ;
                           NOW ;
                           SUB ;
                           SUB ;
                           PAIR ;
                           DUP 18 ;
                           SWAP ;
                           EXEC ;
                           PUSH nat 324 ;
                           DUP 12 ;
                           CAR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           DIG 5 ;
                           CAR ;
                           CAR ;
                           CDR ;
                           SUB ;
                           PAIR ;
                           DUP 18 ;
                           SWAP ;
                           EXEC ;
                           DUP 13 ;
                           CDR ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DIG 13 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP 15 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP 15 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP 16 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           DUP 15 ;
                           DIG 9 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           DIG 11 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DIG 10 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DIG 9 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           SOME ;
                           DIG 12 ;
                           UPDATE ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DIG 4 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CAR ;
                           PUSH nat 308 ;
                           DIG 9 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           DUP 11 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CAR ;
                           ADD ;
                           PAIR ;
                           DUP 15 ;
                           SWAP ;
                           EXEC ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           DIG 5 ;
                           DUP 10 ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CAR ;
                           CAR ;
                           CDR ;
                           ADD ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CDR ;
                           DUP ;
                           CAR ;
                           DUP 8 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           DIG 5 ;
                           DUP 9 ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CDR ;
                           CAR ;
                           CDR ;
                           CDR ;
                           ADD ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP 4 ;
                           DUP 5 ;
                           CDR ;
                           DIG 2 ;
                           UPDATE 2 ;
                           UPDATE 2 ;
                           DUP ;
                           CAR ;
                           PUSH nat 307 ;
                           DIG 3 ;
                           DUP 6 ;
                           CAR ;
                           CDR ;
                           SUB ;
                           PAIR ;
                           DUP 10 ;
                           SWAP ;
                           EXEC ;
                           UPDATE 2 ;
                           UPDATE 1 ;
                           DUP ;
                           CAR ;
                           DIG 2 ;
                           DIG 3 ;
                           CAR ;
                           CAR ;
                           ADD ;
                           UPDATE 1 ;
                           UPDATE 1 ;
                           LEFT (pair (pair nat nat)
                                      (pair nat nat)
                                      (pair (pair (pair (pair (pair address
                                                                    nat
                                                                    (or (or address (pair address nat)) unit)
                                                                    (or (or address (pair address nat)) unit)
                                                                    nat)
                                                              (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat))
                                                        int
                                                        int)
                                                  (pair (pair nat nat) (pair nat nat))
                                                  bool
                                                  (big_map (pair nat bool) (pair int nat)))
                                            (pair (pair nat (big_map string bytes)) nat (big_map (pair address address nat) unit))
                                            (pair (big_map nat (pair (pair (pair (pair int int) nat) int address) int)) (pair nat nat))
                                            nat
                                            (big_map
                                               int
                                               (pair (pair (pair (pair (pair nat nat) int) nat int) (pair int nat) nat nat) int)))) } } } ;
             DIG 3 ;
             DIG 6 ;
             DIG 7 ;
             DROP 3 ;
             PUSH nat 309 ;
             DUP 2 ;
             CAR ;
             CDR ;
             DUP 4 ;
             CAR ;
             CDR ;
             SUB ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUP 2 ;
             CAR ;
             CAR ;
             DUP 4 ;
             CDR ;
             CAR ;
             DUP 2 ;
             COMPARE ;
             LT ;
             IF { SWAP ;
                  DIG 2 ;
                  DIG 4 ;
                  DIG 5 ;
                  DROP 4 ;
                  SWAP ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  PUSH nat 104 ;
                  PAIR ;
                  FAILWITH }
                { DUP 5 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET 7 ;
                  DIG 2 ;
                  SELF_ADDRESS ;
                  SENDER ;
                  PAIR 4 ;
                  DUP 6 ;
                  SWAP ;
                  EXEC ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CAR ;
                  GET 5 ;
                  DIG 2 ;
                  DIG 4 ;
                  CDR ;
                  CDR ;
                  SELF_ADDRESS ;
                  PAIR 4 ;
                  DIG 3 ;
                  SWAP ;
                  EXEC ;
                  DIG 2 ;
                  CDR ;
                  CDR ;
                  NIL operation ;
                  DIG 2 ;
                  CONS ;
                  DIG 2 ;
                  CONS ;
                  PAIR } } } ;
  view "snapshot_cumulatives_inside"
       (pair (int %lower_tick_index) (int %upper_tick_index))
       (pair (pair (int %seconds_inside) (int %seconds_per_liquidity_inside))
             (int %tick_cumulative_inside))
       { UNPAIR ;
         DUP ;
         CDR ;
         DUP 2 ;
         CAR ;
         COMPARE ;
         GT ;
         IF { PUSH nat 110 ; FAILWITH } {} ;
         DUP 2 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         DUP ;
         CDR ;
         CAR ;
         SWAP ;
         CAR ;
         CDR ;
         GET ;
         IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
         DUP ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         CAR ;
         CAR ;
         CDR ;
         INT ;
         PUSH timestamp 0 ;
         NOW ;
         SUB ;
         PAIR ;
         PAIR ;
         DUP 3 ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         DUP 3 ;
         CAR ;
         GET ;
         IF_NONE { PUSH nat 105 ; FAILWITH } {} ;
         DUP 4 ;
         CDR ;
         CDR ;
         CDR ;
         CDR ;
         DUP 4 ;
         CDR ;
         GET ;
         IF_NONE { PUSH nat 105 ; FAILWITH } {} ;
         DUP 2 ;
         CDR ;
         DUP 3 ;
         CAR ;
         CDR ;
         CDR ;
         CAR ;
         INT ;
         DIG 3 ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         INT ;
         PAIR ;
         PAIR ;
         DUP 2 ;
         CDR ;
         DUP 3 ;
         CAR ;
         CDR ;
         CDR ;
         CAR ;
         INT ;
         DIG 3 ;
         CAR ;
         CDR ;
         CAR ;
         CDR ;
         INT ;
         PAIR ;
         PAIR ;
         PUSH bool False ;
         DUP 5 ;
         CAR ;
         DUP 7 ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         COMPARE ;
         GE ;
         COMPARE ;
         EQ ;
         IF { DUP 2 ;
              CDR ;
              DUP 4 ;
              CDR ;
              SUB ;
              DUP 3 ;
              CAR ;
              CDR ;
              DUP 5 ;
              CAR ;
              CDR ;
              SUB ;
              DIG 3 ;
              CAR ;
              CAR ;
              DUP 5 ;
              CAR ;
              CAR ;
              SUB ;
              PAIR ;
              PAIR }
            { SWAP } ;
         PUSH bool True ;
         DIG 4 ;
         CDR ;
         DIG 5 ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         COMPARE ;
         GE ;
         COMPARE ;
         EQ ;
         IF { DUP 2 ;
              CDR ;
              DUP 4 ;
              CDR ;
              SUB ;
              DUP 3 ;
              CAR ;
              CDR ;
              DUP 5 ;
              CAR ;
              CDR ;
              SUB ;
              DIG 3 ;
              CAR ;
              CAR ;
              DUP 5 ;
              CAR ;
              CAR ;
              SUB ;
              PAIR ;
              PAIR }
            { SWAP } ;
         DUP ;
         CDR ;
         DUP 3 ;
         CDR ;
         DUP 5 ;
         CDR ;
         SUB ;
         SUB ;
         DUP 2 ;
         CAR ;
         CDR ;
         DUP 4 ;
         CAR ;
         CDR ;
         DUP 6 ;
         CAR ;
         CDR ;
         SUB ;
         SUB ;
         DIG 2 ;
         CAR ;
         CAR ;
         DIG 3 ;
         CAR ;
         CAR ;
         DIG 4 ;
         CAR ;
         CAR ;
         SUB ;
         SUB ;
         PAIR ;
         PAIR } ;
  view "observe"
       (list timestamp)
       (list (pair (nat %seconds_per_liquidity_cumulative) (int %tick_cumulative)))
       { UNPAIR ;
         SWAP ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         SWAP ;
         MAP { DUP 2 ;
               CAR ;
               CAR ;
               DUP 3 ;
               CAR ;
               CDR ;
               DUP 4 ;
               CDR ;
               CAR ;
               DUP 3 ;
               GET ;
               IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
               DUP 5 ;
               CDR ;
               CAR ;
               DUP 3 ;
               GET ;
               IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
               DUP 2 ;
               CDR ;
               DUP 6 ;
               COMPARE ;
               LT ;
               IF { DUP 5 ; DUP 3 ; CDR ; PAIR ; PUSH nat 108 ; PAIR ; FAILWITH } {} ;
               DUP ;
               CDR ;
               DUP 6 ;
               COMPARE ;
               GT ;
               IF { DUP 5 ; DUP 2 ; CDR ; PAIR ; PUSH nat 109 ; PAIR ; FAILWITH } {} ;
               DUP ;
               CDR ;
               DUP 6 ;
               COMPARE ;
               LT ;
               IF { DIG 2 ;
                    PAIR ;
                    SWAP ;
                    DIG 2 ;
                    PAIR ;
                    PAIR ;
                    SWAP ;
                    DUP 3 ;
                    PAIR ;
                    PAIR ;
                    LEFT (pair (pair (pair (pair (pair nat nat) (pair int int)) timestamp)
                                     (pair (pair nat nat) (pair int int))
                                     timestamp)
                               nat) ;
                    LOOP_LEFT
                      { UNPAIR ;
                        UNPAIR ;
                        DIG 2 ;
                        UNPAIR ;
                        DUP ;
                        UNPAIR ;
                        DUP 4 ;
                        UNPAIR ;
                        DUP ;
                        PUSH nat 1 ;
                        DUP 5 ;
                        ADD ;
                        COMPARE ;
                        LT ;
                        IF { SWAP ;
                             DIG 3 ;
                             DROP 2 ;
                             PUSH nat 2 ;
                             SWAP ;
                             DIG 2 ;
                             ADD ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             DUP 4 ;
                             CDR ;
                             CAR ;
                             DUP 2 ;
                             GET ;
                             IF_NONE { PUSH nat 321 ; FAILWITH } {} ;
                             DUP ;
                             DIG 2 ;
                             PAIR ;
                             DUP 6 ;
                             DIG 2 ;
                             CDR ;
                             COMPARE ;
                             GT ;
                             IF { DIG 2 ; DROP } { SWAP ; DROP ; SWAP } ;
                             SWAP ;
                             PAIR ;
                             DUG 2 ;
                             PAIR ;
                             PAIR ;
                             LEFT (pair (pair (pair (pair (pair nat nat) (pair int int)) timestamp)
                                              (pair (pair nat nat) (pair int int))
                                              timestamp)
                                        nat) }
                           { DIG 2 ;
                             DIG 4 ;
                             DIG 5 ;
                             DIG 6 ;
                             DROP 5 ;
                             PUSH nat 322 ;
                             DUP 3 ;
                             CDR ;
                             DIG 4 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { FAILWITH } { SWAP ; DROP } ;
                             SWAP ;
                             DIG 2 ;
                             PAIR ;
                             PAIR ;
                             RIGHT
                               (pair (pair (pair (pair nat nat) (big_map nat (pair (pair (pair nat nat) (pair int int)) timestamp)) nat)
                                           timestamp)
                                     (pair nat (pair (pair nat nat) (pair int int)) timestamp)
                                     nat
                                     (pair (pair nat nat) (pair int int))
                                     timestamp) } } ;
                    UNPAIR ;
                    UNPAIR ;
                    DUP 2 ;
                    CAR ;
                    CDR ;
                    CAR ;
                    DUP 4 ;
                    MUL ;
                    DUP 2 ;
                    CAR ;
                    CDR ;
                    CDR ;
                    ADD ;
                    DIG 2 ;
                    CAR ;
                    CAR ;
                    CAR ;
                    PUSH nat 0 ;
                    DUP 2 ;
                    COMPARE ;
                    EQ ;
                    IF { DIG 3 ; DROP 2 ; PUSH nat 0 }
                       { PUSH nat 128 ;
                         DIG 4 ;
                         LSL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR } ;
                    DIG 2 ;
                    CAR ;
                    CAR ;
                    CDR ;
                    ADD }
                  { SWAP ;
                    DIG 2 ;
                    DIG 3 ;
                    DIG 4 ;
                    DROP 4 ;
                    DUP ;
                    CAR ;
                    CDR ;
                    CDR ;
                    SWAP ;
                    CAR ;
                    CAR ;
                    CDR } ;
               PAIR } ;
         SWAP ;
         DROP } ;
  view "get_position_info"
       nat
       (pair (pair (nat %liquidity) (int %lower_tick_index))
             (address %owner)
             (int %upper_tick_index))
       { UNPAIR ;
         SWAP ;
         CDR ;
         CDR ;
         CAR ;
         CAR ;
         SWAP ;
         GET ;
         IF_NONE { UNIT ; PUSH string "FA2_TOKEN_UNDEFINED" ; PAIR ; FAILWITH } {} ;
         DUP ;
         CDR ;
         DUP 2 ;
         CAR ;
         CDR ;
         CDR ;
         PAIR ;
         DUP 2 ;
         CAR ;
         CDR ;
         CAR ;
         DIG 2 ;
         CAR ;
         CAR ;
         CDR ;
         PAIR ;
         PAIR } }

